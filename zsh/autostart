ORANGE="\e[33m"
RED="\e[31m"
BLUE="\e[94m"
GREEN="\e[92m"
STOP="\e[0m"

if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    OS=$PRETTY_NAME
    VER=$VERSION_ID
else
    # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
    OS=$(uname -s)
    VER=$(uname -r)
fi
if [[ $OS = *"Arch"* ]]; then
    OS=arch
    COLOR=$BLUE
    PCOLOR=4
fi
if [[ $OS = *"Fedora"* ]]; then
    OS=fedora
    COLOR=$BLUE 
    PCOLOR=12
fi
if [[ $OS = *"Ubuntu"* ]]; then
    OS=ubuntu
    COLOR=$ORANGE
    PCOLOR=3
fi
if [[ $OS = *"Debian"* ]]; then
    OS=debian
    COLOR=$RED
    PCOLOR=9
fi
if [[ $OS = *"OpenSUSE"* ]]; then
    OS=opensuse
    COLOR=$GREEN
    PCOLOR=10
fi
if [[ $OS = *"void"* ]]; then
    OS=void
    COLOR=$GREEN
    PCOLOR=10
fi
getUptime() {
  IFS=. read -r s _ < /proc/uptime 

  # Convert uptime to readable value
  d="$((s / 60 / 60 / 24))"
  h="$((s / 60 / 60 % 24))"
  m="$((s / 60 % 60))"

  # Plurals
  [ "$d" -gt 1 ] && dp=s
  [ "$h" -gt 1 ] && hp=s
  [ "$m" -gt 1 ] && mp=s
  [ "$s" -gt 1 ] && sp=s

  # Hide empty fields.
  [ "$d" = 0 ] && d=
  [ "$h" = 0 ] && h=
  [ "$m" = 0 ] && m=
  [ "$m" != "" ] && s=

  # Make the output of uptime smaller.
  [ "$d" ] && uptime="$d day$dp, "
  [ "$h" ] && uptime="$uptime$h hour$hp, "
  [ "$m" ] && uptime="$uptime$m min$mp"
  [ "$s" ] && uptime="$uptime$s sec$sp"

  uptime=${uptime%, }
  printf "$COLOR  $STOP%s" "$uptime"
}

echo "$(whoami)$GREEN@$STOP$(hostname)\n\n$COLOR$STOP  $DESKTOP_SESSION\n$COLOR$STOP  $(ps -p $$ -ocomm=)\n$(getUptime)\n $(printf $COLOR)$(figlet -w 200 -f small $OS)$(printf $STOP) \nEat $COLOR $STOP, Sleep $COLOR $STOP, Linux $COLOR $STOP.\n"
